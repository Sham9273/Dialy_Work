class Queue{
    int size=5;
    int[]Q=new int[size];
    int front,rear;
    
    Queue(){
        front=-1;
        rear=-1;
    }
    boolean isEmpty(){
        return(front==-1);
    }
    boolean isFull(){
        return(rear==size-1);
    }
    void enqueue(int x){
        if(isFull()){
            System.out.println("Queue is full");
        }
        else{
            if(front==-1){
                front=0;
            }
            rear++;
            Q[rear]=x;
            System.out.println(x+" Inserted");
        }
    }
    int dequeue(){
        if(isEmpty()){
            System.out.println("Queue is Empty");
            return -1;
        }
        else{
            int x=Q[front];
            System.out.println(x+" Deleted");
            if(front>rear){
                front=-1;
                rear=-1;
            }
            else{
                front++;
            }
            return x;
        }
    }
    void display(){
        
        if(isEmpty()){
            System.out.println("Empty Queue");
        }
        else{
            System.out.println("Queue Element");
            for(int i=front;i<rear;i++){
                System.out.println(Q[i]);
            }
            System.out.println();
        }
    }
    public static void main(String args[]){
        Queue q=new Queue();
        q.enqueue(11);
        q.enqueue(12);
        q.enqueue(13);
        q.enqueue(14);
        q.enqueue(15);
        
        q.display();
        q.dequeue();
        q.display();
        q.dequeue();
        q.display();
        q.dequeue();
        q.display();
        q.dequeue();
        q.display();
        q.dequeue();
        q.display();
        
    }
}
